name: bake

on:
  push:
    branches:
      - main

jobs:
  targets:
    name: get-targets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # https://github.com/docker/bake-action/issues/87#issuecomment-1184659151
      - name: Create matrix
        id: targets
        run: |
          echo "matrix=$(docker buildx bake --print | jq -cr '.group.default.targets')" >> "${GITHUB_OUTPUT}"
      - name: Show matrix
        run: |
          echo ${{ steps.targets.outputs.matrix }}
    outputs:
      matrix: ${{ steps.targets.outputs.matrix }}

  bake:
    runs-on: ubuntu-latest
    needs: targets
    strategy:
      matrix:
        target: ${{ fromJson(needs.targets.outputs.matrix) }}
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get images
        id: images
        run: |
          TAGS="$(docker buildx bake --print | jq -cr '.target.${{ matrix.target }}.tags')"
          IMAGES="$(jq '.[] | sub(":.*$"; "")' <<<"${TAGS}" | sort | uniq | jq -scr)"
          echo "tags=$(jq -cr 'join(",")' <<< "${TAGS}")" >> "${GITHUB_OUTPUT}"
          echo "images=$(jq -cr 'join(",")' <<< "${IMAGES}")" >> "${GITHUB_OUTPUT}"

      - name: Show images
        run: |
          echo ${{ steps.images.outputs.images }}
          echo ${{ steps.images.outputs.tags }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.images.outputs.images }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
          bake-target: ${{ matrix.target }}

      - name: Build and push
        uses: docker/bake-action@v2
        with:
          pull: true
          push: true
          targets: ${{ matrix.target }}
          workdir: ${{ steps.wtf.outputs.workdir }}
          files: |
            ./docker-compose.yaml
            ${{ steps.meta.outputs.bake-file }}
          set: |
            *.cache-from=type=gha,scope=build-${{ matrix.target }}
            *.cache-to=type=gha,scope=build-${{ matrix.target }},mode=max
            *.platform: linux/arm64,linux/amd64
